# vim: set ft=ansible:
- hosts: ec2postgresql
  gather_facts: false
  user: ubuntu
  tasks:
    - name: Install dependencies
      become: yes
      apt: name={{item}}
           state=installed
      with_items:
        - build-essential
        - libreadline-dev
        - zlib1g-dev
        - flex
        - bison
        - libxml2-dev
        - libxslt-dev
        - libssl-dev
        - git

    - name: Add postgres group
      become: yes
      group:
        name: postgres
        gid: 999
        state: present

    - name: Add postgres user
      become: yes
      user:
        name: postgres
        uid: 999
        group: postgres

    - include: nvme.yml
      when: postgresql_nvme is defined

    - name: Clone PG source from {{ pg_repo | default('https://github.com/postgres/postgres.git') }}/{{ pg_branch | default('master') }}
      become: yes
      become_user: postgres
      git:
        repo: "{{ pg_repo | default('https://github.com/postgres/postgres.git') }}"
        dest: /home/postgres/postgres
        version: "{{ pg_branch | default('master') }}"

    - name: Configure PG
      become: yes
      become_user: postgres
      shell: ./configure --prefix={{ pg_dir }}
            chdir=/home/postgres/postgres

    - name: Build PG
      become: yes
      become_user: postgres
      shell: make chdir=/home/postgres/postgres

    - name: Install PG
      become: yes
      become_user: postgres
      shell: make install chdir=/home/postgres/postgres

    - name: Create data directory
      become: yes
      become_user: postgres
      file: path={{ pg_dir }}/data state=directory owner=postgres

    - name: Init PG
      become: yes
      become_user: postgres
      shell: ./bin/initdb -D {{ pg_dir }}/data chdir={{ pg_dir }}

    - name: Start PG
      shell: ./bin/pg_ctl -D data start chdir={{ pg_dir }}
      become: yes
      become_user: postgres

    - name: Create socket directory
      become: yes
      file: path=/var/run/postgresql state=directory owner=postgres

    - name: Install pg_view dependencies
      become: yes
      apt: name={{item}}
           state=installed
      with_items:
        - python-psycopg2
        - python3-pip

    - name: Update setuptools (for pg_view)
      become: yes
      pip: name=setuptools
           executable=pip3
           state=latest
           extra_args='--upgrade'

    - name: Install pg_view
      become: yes
      pip: name=pg_view
           executable=pip3

    - name: Template Postgresql configuration file
      become: yes
      become_user: postgres
      action: template
        src=templates/confs/{{ item.source }}.conf.j2
        dest={{ pg_dir }}/data/{{ item.target }}.conf
      with_items:
        #- { source: "pg_hba", target: "pg_hba"}
        - { source: "postgresql_from_source", target: "postgresql" }

    - name: restart postgresql
      become: yes
      become_user: postgres
      shell: ./bin/pg_ctl -D data restart chdir={{ pg_dir }}

    - name: Create user
      postgresql_user:
        name={{ db_user }}
        password={{ db_pass }}
        role_attr_flags=CREATEDB,SUPERUSER
        state=present
        encrypted=yes
        login_unix_socket=/var/run/postgresql
      become: yes
      become_user: postgres
      become_method: sudo

    - name: Create user database
      postgresql_db:
        name={{ db_user }}
        login_user={{ db_user }}
        login_password={{ db_pass }}
        login_unix_socket=/var/run/postgresql

    - name: Create test database
      postgresql_db:
        name={{ db_name }}
        login_user={{ db_user }}
        login_password={{ db_pass }}
        login_unix_socket=/var/run/postgresql

    - name: Copy init sql
      template:
        src=templates/init/{{ pg_init }}.sql
        dest=/home/postgres/{{ pg_init }}.sql
      become: yes
      become_user: postgres
      when: pg_init is defined

    - name: Copy pgbench sql
      template:
        src=templates/init/{{ item }}.sql
        dest=/home/ubuntu/{{ item }}.sql
      with_items: "{{ pgbench_script }}"
      when: pgbench_script is defined

    - name: Run init script
      shell: psql -h /var/run/postgresql {{ db_name }} -U {{ db_user }} < /home/postgres/{{ pg_init }}.sql
      become: yes
      become_user: postgres
      environment:
        PATH: $PATH:{{ pg_dir }}/bin
      when: pg_init is defined

    - name: Start pg_view
      command: pg_view -o json > /home/ubuntu/postgresql.json &

  environment:
    PGPASSWORD: "{{ db_pass }}"
